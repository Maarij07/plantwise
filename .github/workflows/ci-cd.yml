name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.x'
  JAVA_VERSION: '17'
  NODE_VERSION: '18'

jobs:
  # Code Quality Check
  analyze:
    name: Code Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run code generation
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Format check
      run: dart format --set-exit-if-changed .
      
    - name: Analyze code
      run: flutter analyze
      
    - name: Check for any ignored files
      run: git diff --exit-code

  # Unit and Widget Tests
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: analyze
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run code generation
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Run tests with coverage
      run: flutter test --coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        fail_ci_if_error: false

  # Build Android APK
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [analyze, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run code generation
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Build Android APK (Debug)
      run: flutter build apk --debug
      
    - name: Build Android APK (Release)
      if: startsWith(github.ref, 'refs/tags/')
      run: flutter build apk --release
      
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: |
          build/app/outputs/flutter-apk/*.apk
        retention-days: 30

  # Build Android App Bundle
  build-android-bundle:
    name: Build Android Bundle
    runs-on: ubuntu-latest
    needs: [analyze, test]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run code generation
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Build Android App Bundle
      run: flutter build appbundle --release
      
    - name: Upload App Bundle artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-bundle
        path: build/app/outputs/bundle/release/*.aab
        retention-days: 30

  # Build iOS (only on macOS)
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: [analyze, test]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run code generation
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Build iOS (no codesign)
      run: flutter build ios --release --no-codesign
      
    - name: Create iOS Archive
      run: |
        cd build/ios/iphoneos
        zip -r ../../../ios-build.zip Runner.app

    - name: Upload iOS artifact
      uses: actions/upload-artifact@v3
      with:
        name: ios-build
        path: ios-build.zip
        retention-days: 30

  # Build Web
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: [analyze, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run code generation
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Build Web
      run: flutter build web --release
      
    - name: Upload Web artifact
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: build/web/
        retention-days: 30

  # Build Windows
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: [analyze, test]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run code generation
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Build Windows
      run: flutter build windows --release
      
    - name: Create Windows Archive
      run: |
        cd build/windows/x64/runner/Release
        Compress-Archive -Path * -DestinationPath ../../../../../windows-build.zip
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-build
        path: windows-build.zip
        retention-days: 30

  # Deploy Web to GitHub Pages (on main branch)
  deploy-web:
    name: Deploy Web to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-web
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Download web build
      uses: actions/download-artifact@v3
      with:
        name: web-build
        path: web-build
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: web-build
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  # Create Release (on tags)
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android, build-android-bundle, build-web]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha')
        generate_release_notes: true
        files: |
          android-apk/*.apk
          android-bundle/*.aab
          ios-build.zip
          windows-build.zip
        body: |
          ## üå± PlantWise Release ${{ github.ref_name }}
          
          ### üì± Downloads
          - **Android APK**: For manual installation on Android devices
          - **Android Bundle**: For Google Play Store distribution
          - **iOS Build**: For App Store distribution (requires code signing)
          - **Windows**: For Windows desktop installation
          
          ### üåê Web App
          The web version is automatically deployed to GitHub Pages.
          
          ### üìã Changes
          See the auto-generated release notes below for detailed changes.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Security Scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
